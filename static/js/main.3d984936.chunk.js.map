{"version":3,"sources":["config.js","components/UpdateVehicle.jsx","components/GetAllVehicles.jsx","components/CreateStudentComp.jsx","components/CreateVehicleComp.jsx","components/Counter.jsx","components/GetLog.jsx","components/UpdateStudents.jsx","components/GetAllStudents.jsx","App.js","serviceWorker.js","index.js"],"names":["UpdateVehicle","state","VehicleID","StudentID","Make","Model","Year","LicencePlate","TagNum","TagStatus","handleChangeVehicleID","bind","handleChangeStudentID","handleChangeMake","handleChangeModel","handleChangeYear","handleChangeLicencePlate","handleChangeTagNum","handleChangeTagStatus","togglePop","togglePopup","this","setState","props","vID","sID","mK","mO","yR","lP","tN","tS","showPopup","event","target","value","className","type","name","onChange","id","onClick","e","fetch","backendurl","method","headers","Accept","body","JSON","stringify","then","res","json","result","alert","message","reloadTable","closePopup","React","Component","GetAllVehicles","Vehicle_id","student_id","fetchedData","loadTableData","data","Fragment","hidden","document","getElementById","columns","Header","accessor","filterable","minWidth","maxWidth","Cell","original","loadingText","defaultPageSize","CreateStudentComp","Firstname","Lastname","postStudent_info","handleChangeStudentid","handleChangeFirstname","handleChangeLastname","jData","col","x","length","key","indexOf","push","table","createElement","tr","insertRow","th","innerHTML","appendChild","y","insertCell","outerHTML","userinput","FirstName","LastName","CreateVehicleComp","Licence_Plate","Tag_Number","postVehicle_info","handleChangeTagNumber","SpotCounter","parkingDeck_Counter","parkingA_Counter","parkingL_Counter","parkingD_Counter","parkingF_Counter","parkingI_Counter","updateCounter","interval","setInterval","lots","style","color","clearInterval","GetLog","getlog_data","convertJSON2Table4data1","dangerouslySetInnerHTML","__html","UpdateStudent","vID_Holder","fN","lN","v_holder","sqlError","errno","GetAllStudents","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d984936.chunk.js","sourcesContent":["export default\r\n{\r\n    \"backend\": \"149.165.168.142:3000\"\r\n}","import React from \"react\";\r\n\r\nimport backendurl from \"../config.js\";\r\n\r\n\r\nexport default class UpdateVehicle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      VehicleID: \"\",\r\n      StudentID: \"\",\r\n      Make: \"\",\r\n      Model: \"\",\r\n      Year: \"\",\r\n      LicencePlate: \"\",\r\n      TagNum: \"\",\r\n      TagStatus: \"\"\r\n    };\r\n\r\n    this.handleChangeVehicleID = this.handleChangeVehicleID.bind(this);\r\n    this.handleChangeStudentID = this.handleChangeStudentID.bind(this);\r\n    this.handleChangeMake = this.handleChangeMake.bind(this);\r\n    this.handleChangeModel = this.handleChangeModel.bind(this);\r\n    this.handleChangeYear = this.handleChangeYear.bind(this);\r\n    this.handleChangeLicencePlate = this.handleChangeLicencePlate.bind(this);\r\n    this.handleChangeTagNum = this.handleChangeTagNum.bind(this);\r\n    this.handleChangeTagStatus = this.handleChangeTagStatus.bind(this);\r\n    this.togglePop = this.togglePopup.bind(this);\r\n  }\r\n\r\n  //=========Unclear\r\n  componentDidMount() {\r\n    this.setState({\r\n      VehicleID: this.props.vID,\r\n      StudentID: this.props.sID,\r\n      Make: this.props.mK,\r\n      Model: this.props.mO,\r\n      Year: this.props.yR,\r\n      LicencePlate: this.props.lP,\r\n      TagNum: this.props.tN,\r\n      TagStatus: this.props.tS\r\n    });\r\n  }\r\n\r\n  togglePopup() {\r\n    this.setState({\r\n      showPopup: !this.state.showPopup\r\n    });\r\n  }\r\n\r\n  handleChangeVehicleID(event) {\r\n    this.setState({\r\n      VehicleID: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeStudentID(event) {\r\n    this.setState({\r\n      StudentID: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeMake(event) {\r\n    this.setState({\r\n      Make: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeModel(event) {\r\n    this.setState({\r\n      Model: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeYear(event) {\r\n    this.setState({\r\n      Year: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeLicencePlate(event) {\r\n    this.setState({\r\n      LicencePlate: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeTagNum(event) {\r\n    this.setState({\r\n      TagNum: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeTagStatus(event) {\r\n    this.setState({\r\n      TagStatus: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"popup\">\r\n        <div className=\"popup_inner_V\">\r\n          <div>\r\n            <label>Vehicle ID :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"Vid\"\r\n              value={this.state.VehicleID}\r\n              onChange={this.handleChangeVehicleID}\r\n            />\r\n            <br />\r\n            <label>Student ID :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"Sid\"\r\n              value={this.state.StudentID}\r\n              onChange={this.handleChangeStudentID}\r\n            />\r\n            <br />\r\n            <label>Make :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"Mk\"\r\n              value={this.state.Make}\r\n              onChange={this.handleChangeMake}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Model :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"Mo\"\r\n              value={this.state.Model}\r\n              onChange={this.handleChangeModel}\r\n            />\r\n            <br />\r\n            <label>Year :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"Yr\"\r\n              value={this.state.Year}\r\n              onChange={this.handleChangeYear}\r\n            />\r\n            <br />\r\n            <label>Licence Plate :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"Lp\"\r\n              value={this.state.LicencePlate}\r\n              onChange={this.handleChangeLicencePlate}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Tag Number :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"Tn\"\r\n              value={this.state.TagNum}\r\n              onChange={this.handleChangeTagNum}\r\n            />\r\n            <br />\r\n            <label>Tag Status :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"Ts\"\r\n              value={this.state.TagStatus}\r\n              onChange={this.handleChangeTagStatus}\r\n            />\r\n            <br />\r\n            <br />\r\n            <button\r\n              id=\"submitBTN\"\r\n              onClick={e => {\r\n                fetch(\"http://\" + backendurl.backend + \"/updatevehicle\", {\r\n                  method: \"PUT\",\r\n                  headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                  },\r\n                  body: JSON.stringify({\r\n                    VehicleID: this.state.VehicleID,\r\n                    StudentID: this.state.StudentID,\r\n                    Make: this.state.Make,\r\n                    Model: this.state.Model,\r\n                    Year: this.state.Year,\r\n                    LicencePlate: this.state.LicencePlate,\r\n                    TagNum: this.state.TagNum,\r\n                    TagStatus: this.state.TagStatus\r\n                  })\r\n                })\r\n                  .then(res => res.json())\r\n                  .then(result => {\r\n                    alert(result.message);\r\n                    this.props.reloadTable();\r\n                  });\r\n                this.props.closePopup();\r\n              }}\r\n            >\r\n              Submit\r\n            </button>\r\n            <button id=\"closeBTN\" onClick={this.props.closePopup}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n\r\nimport UpdateVehicle from \"./UpdateVehicle\";\r\nimport backendurl from \"../config.js\";\r\n\r\n\r\nexport default class GetAllVehicles extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      Vehicle_id: \"\",\r\n      student_id: \"\",\r\n      Make: \"\",\r\n      Model: \"\",\r\n      Year: \"\",\r\n      LicencePlate: \"\",\r\n      TagNum: \"\",\r\n      TagStatus: \"\",\r\n      fetchedData: [{}],\r\n      showPopup: false\r\n    };\r\n    this.togglePop = this.togglePopup.bind(this);\r\n    this.reloadTable = this.reloadTable.bind(this);\r\n  }\r\n\r\n  togglePopup() {\r\n    this.setState({\r\n      showPopup: !this.state.showPopup\r\n    });\r\n  }\r\n\r\n  reloadTable() {\r\n    this.setState({\r\n      fetchedData: [{}]\r\n    });\r\n    this.loadTableData();\r\n  }\r\n\r\n  loadTableData() {\r\n    fetch(\"http://\" + backendurl.backend + \"/Vehicles\", {\r\n      method: \"GET\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        this.setState({\r\n          fetchedData: result\r\n        });\r\n      });\r\n  }\r\n\r\n  // =============\r\n  render() {\r\n    const data = this.state.fetchedData;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h1> Vehicles</h1>\r\n        <button\r\n          id=\"getBtn_v\"\r\n          hidden={false}\r\n          onClick={e => {\r\n            this.loadTableData();\r\n            document.getElementById(\"tableDiv_v\").hidden = false;\r\n            document.getElementById(\"closeBtn_v\").hidden = false;\r\n            document.getElementById(\"getBtn_v\").hidden = true;\r\n          }}\r\n        >\r\n          Show Vehicle Table\r\n        </button>\r\n        <button\r\n          id=\"closeBtn_v\"\r\n          hidden={true}\r\n          onClick={e => {\r\n            this.loadTableData();\r\n            document.getElementById(\"tableDiv_v\").hidden = true;\r\n            document.getElementById(\"closeBtn_v\").hidden = true;\r\n            document.getElementById(\"getBtn_v\").hidden = false;\r\n          }}\r\n        >\r\n          Close Table\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <div id=\"tableDiv_v\" hidden={true}>\r\n          <ReactTable\r\n            data={data}\r\n            columns={[\r\n              {\r\n                Header: \"Vehicle ID\",\r\n                accessor: \"VehicleID\",\r\n                filterable: true,\r\n                minWidth: 100\r\n              },\r\n              {\r\n                Header: \"Student ID\",\r\n                accessor: \"StudentID\",\r\n                filterable: true,\r\n                minWidth: 100\r\n              },\r\n              {\r\n                Header: \"Make\",\r\n                accessor: \"Make\",\r\n                filterable: false,\r\n                minWidth: 100\r\n              },\r\n              {\r\n                Header: \"Model\",\r\n                accessor: \"Model\",\r\n                filterable: false,\r\n                minWidth: 100\r\n              },\r\n              {\r\n                Header: \"Year\",\r\n                accessor: \"Year\",\r\n                filterable: false,\r\n                minWidth: 100\r\n              },\r\n              {\r\n                Header: \"Licence Plate\",\r\n                accessor: \"LicencePlate\",\r\n                filterable: false\r\n              },\r\n              {\r\n                Header: \"Tag Number\",\r\n                accessor: \"TagNum\",\r\n                filterable: false,\r\n                minWidth: 250\r\n              },\r\n              {\r\n                Header: \"Tag Status\",\r\n                accessor: \"TagStatus\",\r\n                filterable: false,\r\n                maxWidth: 100\r\n              },\r\n              {\r\n                Header: \"Actions\",\r\n                filterable: false,\r\n                Cell: props => {\r\n                  return (\r\n                    <div>\r\n                      <button\r\n                        onClick={e => {\r\n                          this.setState({\r\n                            Vehicle_id: props.original.VehicleID,\r\n                            student_id: props.original.StudentID,\r\n                            Make: props.original.Make,\r\n                            Model: props.original.Model,\r\n                            Year: props.original.Year,\r\n                            LicencePlate: props.original.LicencePlate,\r\n                            TagNum: props.original.TagNum,\r\n                            TagStatus: props.original.TagStatus\r\n                          });\r\n                          this.togglePop();\r\n                        }}\r\n                      >\r\n                        Update\r\n                      </button>\r\n                      {this.state.showPopup ? (\r\n                        <UpdateVehicle\r\n                          vID={this.state.Vehicle_id}\r\n                          sID={this.state.student_id}\r\n                          mK={this.state.Make}\r\n                          mO={this.state.Model}\r\n                          yR={this.state.Year}\r\n                          lP={this.state.LicencePlate}\r\n                          tN={this.state.TagNum}\r\n                          tS={this.state.TagStatus}\r\n                          closePopup={this.togglePopup.bind(this)}\r\n                          reloadTable={this.reloadTable.bind(this)}\r\n                        />\r\n                      ) : null}\r\n                      <span> </span>\r\n                      <button\r\n                        onClick={e => {\r\n                          fetch(\r\n                            \"https://\" + backendurl.backend + \"/delete/vehicledata/\" +\r\n                              props.original.VehicleID,\r\n                            {\r\n                              method: \"DELETE\"\r\n                            }\r\n                          )\r\n                            .then(res => res.json())\r\n                            .then(result => {\r\n                              this.reloadTable();\r\n                              alert(result.message);\r\n                            });\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  );\r\n                }\r\n              }\r\n            ]}\r\n            filterable\r\n            loadingText=\"Loading.....\"\r\n            defaultPageSize={5}\r\n            className=\"-striped -highlight\"\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport backendurl from \"../config.js\";\r\n\r\n\r\nexport default class CreateStudentComp extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      student_id: \"\",\r\n      Firstname: \"\",\r\n      Lastname: \"\",\r\n      postStudent_info: \"\"\r\n    };\r\n\r\n    this.handleChangeStudentid = this.handleChangeStudentid.bind(this);\r\n    this.handleChangeFirstname = this.handleChangeFirstname.bind(this);\r\n    this.handleChangeLastname = this.handleChangeLastname.bind(this);\r\n  }\r\n\r\n  handleChangeStudentid(event) {\r\n    this.setState({\r\n      student_id: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeFirstname(event) {\r\n    this.setState({\r\n      Firstname: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeLastname(event) {\r\n    this.setState({\r\n      Lastname: event.target.value\r\n    });\r\n  }\r\n\r\n  convertJSON2Table(jData) {\r\n    var col = [];\r\n    for (let x = 0; x < jData.length; x++) {\r\n      for (let key in jData[x]) {\r\n        if (col.indexOf(key) === -1) {\r\n          col.push(key);\r\n        }\r\n      }\r\n    }\r\n\r\n    var table = document.createElement(\"table\");\r\n\r\n    var tr = table.insertRow(-1);\r\n    for (let x = 0; x < col.length; x++) {\r\n      var th = document.createElement(\"th\");\r\n      th.innerHTML = col[x];\r\n      tr.appendChild(th);\r\n    }\r\n\r\n    for (let x = 0; x < jData.length; x++) {\r\n      tr = table.insertRow(-1);\r\n\r\n      for (let y = 0; y < col.length; y++) {\r\n        var tabCell = tr.insertCell(-1);\r\n        tabCell.innerHTML = jData[x][col[y]];\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      postStudent_info: table.outerHTML,\r\n      userinput: \"\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Create New Student</h1>\r\n        Student ID\r\n        <input\r\n          type=\"text\"\r\n          name=\"SID\"\r\n          value={this.state.student_id}\r\n          onChange={this.handleChangeStudentid}\r\n        />\r\n        <br></br>\r\n        First Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"First\"\r\n          value={this.state.Firstname}\r\n          onChange={this.handleChangeFirstname}\r\n        />\r\n        <br></br>\r\n        Last Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"Last\"\r\n          value={this.state.Lastname}\r\n          onChange={this.handleChangeLastname}\r\n        />\r\n        <br></br>\r\n        <button\r\n          //Check if user input is not blank\r\n          onClick={e => {\r\n            fetch(\"http://\" + backendurl.backend + \"/createstudent/\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n              },\r\n              body: JSON.stringify({\r\n                StudentID: this.state.student_id,\r\n                FirstName: this.state.Firstname,\r\n                LastName: this.state.Lastname\r\n              })\r\n            })\r\n              .then(res => res.json())\r\n              .then(result => {\r\n                alert(result.message);\r\n              });\r\n          }}\r\n        >\r\n          Post Student Info\r\n        </button>\r\n        <br></br>\r\n        <br></br>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport backendurl from \"../config.js\";\r\n\r\nexport default class CreateVehicleComp extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      student_id: \"\",\r\n      Make: \"\",\r\n      Model: \"\",\r\n      Year: \"\",\r\n      Licence_Plate: \"\",\r\n      Tag_Number: \"\",\r\n      postVehicle_info: \"\"\r\n    };\r\n\r\n    this.handleChangeStudentid = this.handleChangeStudentid.bind(this);\r\n    this.handleChangeMake = this.handleChangeMake.bind(this);\r\n    this.handleChangeModel = this.handleChangeModel.bind(this);\r\n    this.handleChangeYear = this.handleChangeYear.bind(this);\r\n    this.handleChangeLicencePlate = this.handleChangeLicencePlate.bind(this);\r\n    this.handleChangeTagNumber = this.handleChangeTagNumber.bind(this);\r\n  }\r\n\r\n  handleChangeStudentid(event) {\r\n    this.setState({\r\n      student_id: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeMake(event) {\r\n    this.setState({\r\n      Make: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeModel(event) {\r\n    this.setState({\r\n      Model: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeYear(event) {\r\n    this.setState({\r\n      Year: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeLicencePlate(event) {\r\n    this.setState({\r\n      Licence_Plate: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeTagNumber(event) {\r\n    this.setState({\r\n      Tag_Number: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Create New Vehicle</h1>\r\n        Student ID\r\n        <input\r\n          type=\"text\"\r\n          name=\"SID\"\r\n          value={this.state.student_id}\r\n          onChange={this.handleChangeStudentid}\r\n        />\r\n        <br></br>\r\n        Make\r\n        <input\r\n          type=\"text\"\r\n          name=\"mk\"\r\n          value={this.state.Make}\r\n          onChange={this.handleChangeMake}\r\n        />\r\n        <br></br>\r\n        Model\r\n        <input\r\n          type=\"text\"\r\n          name=\"mo\"\r\n          value={this.state.Model}\r\n          onChange={this.handleChangeModel}\r\n        />\r\n        <br></br>\r\n        Year\r\n        <input\r\n          type=\"text\"\r\n          name=\"year\"\r\n          value={this.state.Year}\r\n          onChange={this.handleChangeYear}\r\n        />\r\n        <br></br>\r\n        Licence Plate\r\n        <input\r\n          type=\"text\"\r\n          name=\"LP\"\r\n          value={this.state.Licence_Plate}\r\n          onChange={this.handleChangeLicencePlate}\r\n        />\r\n        <br></br>\r\n        Tag #\r\n        <input\r\n          type=\"text\"\r\n          name=\"Tnum\"\r\n          value={this.state.Tag_Number}\r\n          onChange={this.handleChangeTagNumber}\r\n        />\r\n        <br></br>\r\n        <br></br>\r\n        <button\r\n          onClick={e => {\r\n            fetch(\"http://\" + backendurl.backend + \"/createvehicle/\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n              },\r\n              body: JSON.stringify({\r\n                StudentID: this.state.student_id,\r\n                Make: this.state.Make,\r\n                Model: this.state.Model,\r\n                Year: this.state.Year,\r\n                LicencePlate: this.state.Licence_Plate,\r\n                TagNum: this.state.Tag_Number\r\n              })\r\n            })\r\n              .then(res => res.json())\r\n              .then(result => {\r\n                alert(result.message);\r\n              });\r\n          }}\r\n        >\r\n          Post Vehicle Info\r\n        </button>\r\n        <br></br>\r\n        <br></br>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport backendurl from \"../config.js\";\r\n\r\nexport default class SpotCounter extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      parkingDeck_Counter: \"-\",\r\n      parkingA_Counter: \"-\",\r\n      parkingL_Counter: \"-\",\r\n      parkingD_Counter: \"-\",\r\n      parkingF_Counter: \"-\",\r\n      parkingI_Counter: \"-\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.updateCounter();\r\n    this.interval = setInterval(() => {\r\n      this.updateCounter();\r\n    }, 10000);\r\n  }\r\n\r\n  updateCounter() {\r\n    fetch(\"http://\" + backendurl.backend + \"/parkingDeck_Counter\", {\r\n      method: \"GET\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        this.setState({\r\n          parkingDeck_Counter: result.lots\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>\r\n          {\" \"}\r\n          Parking Deck Spaces Available :{\" \"}\r\n          <span style={{ color: \"red\" }}>{this.state.parkingDeck_Counter}</span>\r\n        </h1>\r\n        <h1>\r\n          {\" \"}\r\n          Parking Lot 'A' Spaces Available :{\" \"}\r\n          <span style={{ color: \"red\" }}>{this.state.parkingA_Counter}</span>\r\n        </h1>\r\n        <h1>\r\n          {\" \"}\r\n          Parking Lot 'L' Spaces Available :{\" \"}\r\n          <span style={{ color: \"red\" }}>{this.state.parkingL_Counter}</span>\r\n        </h1>\r\n        <h1>\r\n          {\" \"}\r\n          Parking Lot 'D' Spaces Available :{\" \"}\r\n          <span style={{ color: \"red\" }}>{this.state.parkingD_Counter}</span>\r\n        </h1>\r\n        <h1>\r\n          {\" \"}\r\n          Parking Lot 'F' Spaces Available :{\" \"}\r\n          <span style={{ color: \"red\" }}>{this.state.parkingF_Counter}</span>\r\n        </h1>\r\n        <h1>\r\n          {\" \"}\r\n          Parking Lot 'I' Spaces Available :{\" \"}\r\n          <span style={{ color: \"red\" }}>{this.state.parkingI_Counter}</span>\r\n        </h1>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport backendurl from \"../config.js\";\r\n\r\n\r\n\r\nexport default class GetLog extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      getlog_data: \"\"\r\n    };\r\n  }\r\n\r\n  // ==================================== This will create a table based on JSON response change the STATE of the div ===================\r\n  convertJSON2Table4data1(jData) {\r\n    var col = [];\r\n    for (let x = 0; x < jData.length; x++) {\r\n      for (let key in jData[x]) {\r\n        if (col.indexOf(key) === -1) {\r\n          col.push(key);\r\n        }\r\n      }\r\n    }\r\n\r\n    var table = document.createElement(\"table\");\r\n\r\n    var tr = table.insertRow(-1);\r\n    for (let x = 0; x < col.length; x++) {\r\n      var th = document.createElement(\"th\");\r\n      th.innerHTML = col[x];\r\n      tr.appendChild(th);\r\n    }\r\n\r\n    for (let x = 0; x < jData.length; x++) {\r\n      tr = table.insertRow(-1);\r\n\r\n      for (let y = 0; y < col.length; y++) {\r\n        var tabCell = tr.insertCell(-1);\r\n        tabCell.innerHTML = jData[x][col[y]];\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      getlog_data: table.outerHTML\r\n    });\r\n  }\r\n\r\n  // ==========================================================================================================================================\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1> Get Log Data</h1>\r\n        <button\r\n          onClick={e => {\r\n            fetch(\"http://\" + backendurl.backend + \"/datalog\", {\r\n              method: \"GET\"\r\n            })\r\n              .then(res => res.json())\r\n              .then(result => {\r\n                this.convertJSON2Table4data1(result);\r\n              });\r\n          }}\r\n        >\r\n          GET ALL\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <div\r\n          className=\"data1\"\r\n          dangerouslySetInnerHTML={{ __html: this.state.getlog_data }}\r\n        ></div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport backendurl from \"../config.js\";\r\n\r\n\r\nexport default class UpdateStudent extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      student_id: \"\",\r\n      Firstname: \"\",\r\n      Lastname: \"\",\r\n      VehicleID: \"\"\r\n    };\r\n\r\n    this.handleChangeFirstname = this.handleChangeFirstname.bind(this);\r\n    this.handleChangeLastname = this.handleChangeLastname.bind(this);\r\n    this.handleChangeVehicleID = this.handleChangeVehicleID.bind(this);\r\n    this.togglePop = this.togglePopup.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let vID_Holder = \"\";\r\n    if (this.props.vID !== null) {\r\n      vID_Holder = this.props.vID;\r\n    } else {\r\n      vID_Holder = \"\";\r\n    }\r\n\r\n    this.setState({\r\n      student_id: this.props.sID,\r\n      Firstname: this.props.fN,\r\n      Lastname: this.props.lN,\r\n      VehicleID: vID_Holder\r\n    });\r\n  }\r\n\r\n  togglePopup() {\r\n    this.setState({\r\n      showPopup: !this.state.showPopup\r\n    });\r\n  }\r\n\r\n  handleChangeFirstname(event) {\r\n    this.setState({\r\n      Firstname: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeLastname(event) {\r\n    this.setState({\r\n      Lastname: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeVehicleID(event) {\r\n    this.setState({\r\n      VehicleID: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"popup\">\r\n        <div className=\"popup_inner_S\">\r\n          <div>\r\n            <label>First Name :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"FName\"\r\n              value={this.state.Firstname}\r\n              onChange={this.handleChangeFirstname}\r\n            />\r\n            <br />\r\n            <label>Last Name :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"LName\"\r\n              value={this.state.Lastname}\r\n              onChange={this.handleChangeLastname}\r\n            />\r\n            <br />\r\n            <label>Vehicle ID :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"Vid\"\r\n              value={this.state.VehicleID}\r\n              onChange={this.handleChangeVehicleID}\r\n            />\r\n            <br />\r\n            <br />\r\n            <button\r\n              id=\"submitBTN\"\r\n              onClick={e => {\r\n                let v_holder = null;\r\n                if (this.state.VehicleID !== \"\") {\r\n                  v_holder = this.state.VehicleID;\r\n                }\r\n\r\n                fetch(\"http://\" + backendurl.backend + \"/updatestudent/\", {\r\n                  method: \"PUT\",\r\n                  headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                  },\r\n                  body: JSON.stringify({\r\n                    StudentID: this.state.student_id,\r\n                    FirstName: this.state.Firstname,\r\n                    LastName: this.state.Lastname,\r\n                    VehicleID: v_holder\r\n                  })\r\n                })\r\n                  .then(res => res.json())\r\n                  .then(result => {\r\n                    if (result.sqlError !== null) {\r\n                      if (result.sqlError.errno === 1062) {\r\n                        alert(\r\n                          \"That Vehicle ID  is USED by another... try another Vehicle ID.\"\r\n                        );\r\n                      } else if (result.sqlError.errno === 1452) {\r\n                        alert(\r\n                          \"That Vehicle ID does NOT EXIST try another Vehicle ID.\"\r\n                        );\r\n                      }\r\n                    } else {\r\n                      alert(result.message);\r\n                      this.props.reloadTable();\r\n                    }\r\n                  });\r\n                this.props.closePopup();\r\n              }}\r\n            >\r\n              Submit\r\n            </button>\r\n            <button id=\"closeBTN\" onClick={this.props.closePopup}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n\r\nimport UpdateStudent from \"./UpdateStudents\";\r\nimport backendurl from \"../config.js\";\r\n\r\nexport default class GetAllStudents extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      student_id: \"\",\r\n      Firstname: \"\",\r\n      Lastname: \"\",\r\n      VehicleID: \"\",\r\n      fetchedData: [{}],\r\n      showPopup: false\r\n    };\r\n    this.togglePop = this.togglePopup.bind(this);\r\n    this.reloadTable = this.reloadTable.bind(this);\r\n  }\r\n\r\n  togglePopup() {\r\n    this.setState({\r\n      showPopup: !this.state.showPopup\r\n    });\r\n  }\r\n\r\n  reloadTable() {\r\n    this.setState({\r\n      fetchedData: [{}]\r\n    });\r\n    this.loadTableData();\r\n  }\r\n\r\n  loadTableData() {\r\n    fetch(\"http://\" + backendurl.backend + \"/students\", {\r\n      method: \"GET\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        this.setState({\r\n          fetchedData: result\r\n        });\r\n      });\r\n  }\r\n\r\n  // ==========================================================================================================================================\r\n  render() {\r\n    const data = this.state.fetchedData;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h1> Students</h1>\r\n        <button\r\n          id=\"getBtn_s\"\r\n          hidden={false}\r\n          onClick={e => {\r\n            this.loadTableData();\r\n            document.getElementById(\"tableDiv_s\").hidden = false;\r\n            document.getElementById(\"closeBtn_s\").hidden = false;\r\n            document.getElementById(\"getBtn_s\").hidden = true;\r\n          }}\r\n        >\r\n          Show Student Table\r\n        </button>\r\n        <button\r\n          id=\"closeBtn_s\"\r\n          hidden={true}\r\n          onClick={e => {\r\n            document.getElementById(\"tableDiv_s\").hidden = true;\r\n            document.getElementById(\"closeBtn_s\").hidden = true;\r\n            document.getElementById(\"getBtn_s\").hidden = false;\r\n          }}\r\n        >\r\n          Close Table\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <div id=\"tableDiv_s\" hidden={true}>\r\n          <ReactTable\r\n            data={data}\r\n            columns={[\r\n              {\r\n                //Create Filter by Selecting True\r\n                Header: \"Student ID\",\r\n                accessor: \"StudentID\",\r\n                filterable: true\r\n              },\r\n              {\r\n                Header: \"First Name\",\r\n                accessor: \"FirstName\",\r\n                filterable: false\r\n              },\r\n              {\r\n                Header: \"Last Name\",\r\n                accessor: \"LastName\",\r\n                filterable: false\r\n              },\r\n              {\r\n                Header: \"Vehicle ID\",\r\n                accessor: \"VehicleID\",\r\n                filterable: true\r\n              },\r\n              {\r\n                Header: \"Actions\",\r\n                filterable: false,\r\n                Cell: props => {\r\n                  return (\r\n                    <div>\r\n                      <button\r\n                        onClick={e => {\r\n                          this.setState({\r\n                            student_id: props.original.StudentID,\r\n                            Firstname: props.original.FirstName,\r\n                            Lastname: props.original.LastName,\r\n                            VehicleID: props.original.VehicleID\r\n                          });\r\n                          this.togglePop();\r\n                        }}\r\n                      >\r\n                        Update\r\n                      </button>\r\n                      {this.state.showPopup ? (\r\n                        <UpdateStudent\r\n                          sID={this.state.student_id}\r\n                          fN={this.state.Firstname}\r\n                          lN={this.state.Lastname}\r\n                          vID={this.state.VehicleID}\r\n                          closePopup={this.togglePopup.bind(this)}\r\n                          reloadTable={this.reloadTable.bind(this)}\r\n                        />\r\n                      ) : null}\r\n                      <span> </span>\r\n                      <button\r\n                        onClick={e => {\r\n                          fetch(\r\n                            \"http://\" + backendurl.backend + \"/delete/studentdata/\" +\r\n                              props.original.StudentID,\r\n                            {\r\n                              method: \"DELETE\"\r\n                            }\r\n                          )\r\n                            .then(res => res.json())\r\n                            .then(result => {\r\n                              this.reloadTable();\r\n                              alert(result.message);\r\n                            });\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  );\r\n                }\r\n              }\r\n            ]}\r\n            filterable\r\n            loadingText=\"Loading.....\"\r\n            defaultPageSize={10}\r\n            className=\"-striped -highlight\"\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n// import GetTag from \"./components/GetTagComponent.jsx\";\r\nimport GetAllVehicles from \"./components/GetAllVehicles.jsx\";\r\nimport CreateStudentComp from \"./components/CreateStudentComp.jsx\";\r\nimport CreateVehicleComp from \"./components/CreateVehicleComp.jsx\";\r\nimport SpotCounter from \"./components/Counter.jsx\";\r\n//import \"./App.css\";\r\nimport GetLog from \"./components/GetLog.jsx\";\r\nimport GetAllStudents from \"./components/GetAllStudents.jsx\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SpotCounter />\r\n        <hr />\r\n        <GetLog></GetLog>\r\n        <hr></hr>\r\n        <GetAllStudents />\r\n        <hr></hr>\r\n        <GetAllVehicles />\r\n        <hr />\r\n        <CreateStudentComp />\r\n        <hr />\r\n        <CreateVehicleComp />\r\n        <hr />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./App.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}