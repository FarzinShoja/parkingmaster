{"version":3,"sources":["config.js","components/Counter.jsx","components/GetLog.jsx","components/UpdateStudents.jsx","components/GetAllStudents.jsx","components/CreateStudentComp.jsx","components/UpdateVehicle.jsx","components/GetAllVehicles.jsx","components/CreateVehicleComp.jsx","components/MainPage.jsx","App.js","serviceWorker.js","index.js"],"names":["SpotCounter","state","parkingDeck_Counter","parkingA_Counter","parkingL_Counter","parkingD_Counter","parkingF_Counter","parkingI_Counter","this","updateCounter","interval","setInterval","fetch","backendurl","method","then","res","json","result","setState","lots","Fragment","style","color","clearInterval","React","Component","GetLog","LogID","VehicleID","StudentID","Location","DateLog","TagStatus","fetchedData","showPopup","togglePop","togglePopup","bind","reloadTable","loadTableData","data","columns","Header","accessor","filterable","PivotValue","value","minWidth","loadingText","defaultPageSize","className","UpdateStudent","student_id","Firstname","Lastname","handleChangeFirstname","handleChangeLastname","handleChangeVehicleID","vID_Holder","props","vID","sID","fN","lN","event","target","type","name","onChange","id","onClick","e","v_holder","headers","Accept","body","JSON","stringify","FirstName","LastName","sqlError","errno","alert","message","closePopup","GetAllStudents","fontSize","Cell","original","CreateStudentComp","postStudent_info","handleChangeStudentid","jData","col","x","length","key","indexOf","push","table","document","createElement","tr","insertRow","th","innerHTML","appendChild","y","insertCell","outerHTML","userinput","UpdateVehicle","Make","Model","Year","LicencePlate","TagNum","handleChangeStudentID","handleChangeMake","handleChangeModel","handleChangeYear","handleChangeLicencePlate","handleChangeTagNum","handleChangeTagStatus","mK","mO","yR","lP","tN","tS","GetAllVehicles","Vehicle_id","maxWidth","CreateVehicleComp","Licence_Plate","Tag_Number","postVehicle_info","handleChangeTagNumber","useStyles","makeStyles","root","backgroundColor","flexGrow","TabPanel","children","index","other","Typography","component","role","hidden","aria-labelledby","Box","p","a11yProps","IconLabelTabs","classes","useState","setValue","Paper","square","Tabs","newValue","variant","TabIndicatorProps","background","textColor","aria-label","centered","Tab","icon","label","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96bbb00d.chunk.js","sourcesContent":["export default\r\n{\r\n    \"backend\": \"https://js-168-142.jetstream-cloud.org:3000\"\r\n}","import React from \"react\";\r\n\r\nimport backendurl from \"../config.js\";\r\n\r\nexport default class SpotCounter extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      parkingDeck_Counter: \"-\",\r\n      parkingA_Counter: \"-\",\r\n      parkingL_Counter: \"-\",\r\n      parkingD_Counter: \"-\",\r\n      parkingF_Counter: \"-\",\r\n      parkingI_Counter: \"-\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.updateCounter();\r\n    this.interval = setInterval(() => {\r\n      this.updateCounter();\r\n    }, 10000);\r\n  }\r\n\r\n  updateCounter() {\r\n    fetch(backendurl.backend + \"/parkingDeck_Counter\", {\r\n      method: \"GET\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        this.setState({\r\n          parkingDeck_Counter: result.lots\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>\r\n          {\" \"}\r\n          Parking Deck Spaces Available :{\" \"}\r\n          <span style={{ color: \"red\" }}>{this.state.parkingDeck_Counter}</span>\r\n        </h1>\r\n        <h1>\r\n          {\" \"}\r\n          Parking Lot 'A' Spaces Available :{\" \"}\r\n          <span style={{ color: \"red\" }}>{this.state.parkingA_Counter}</span>\r\n        </h1>\r\n        <h1>\r\n          {\" \"}\r\n          Parking Lot 'L' Spaces Available :{\" \"}\r\n          <span style={{ color: \"red\" }}>{this.state.parkingL_Counter}</span>\r\n        </h1>\r\n        <h1>\r\n          {\" \"}\r\n          Parking Lot 'D' Spaces Available :{\" \"}\r\n          <span style={{ color: \"red\" }}>{this.state.parkingD_Counter}</span>\r\n        </h1>\r\n        <h1>\r\n          {\" \"}\r\n          Parking Lot 'F' Spaces Available :{\" \"}\r\n          <span style={{ color: \"red\" }}>{this.state.parkingF_Counter}</span>\r\n        </h1>\r\n        <h1>\r\n          {\" \"}\r\n          Parking Lot 'I' Spaces Available :{\" \"}\r\n          <span style={{ color: \"red\" }}>{this.state.parkingI_Counter}</span>\r\n        </h1>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n\r\nimport backendurl from \"../config.js\";\r\n\r\n\r\n\r\nexport default class GetLog extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      LogID: \"\",\r\n      VehicleID: \"\",\r\n      StudentID: \"\",\r\n      Location: \"\",\r\n      DateLog: \"\",\r\n      TagStatus: \"\",\r\n      fetchedData: [{}],\r\n      showPopup: false\r\n    };\r\n    this.togglePop = this.togglePopup.bind(this);\r\n    this.reloadTable = this.reloadTable.bind(this);\r\n  }\r\n\r\n  togglePopup() {\r\n    this.setState({\r\n      showPopup: !this.state.showPopup\r\n    });\r\n  }\r\n  reloadTable() {\r\n    this.setState({\r\n      fetchedData: [{}]\r\n    });\r\n    this.loadTableData();\r\n  }\r\n\r\n  loadTableData() {\r\n    fetch(backendurl.backend + \"/datalog\", {\r\n      method: \"GET\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        this.setState({\r\n          fetchedData: result\r\n        });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadTableData();\r\n    this.interval = setInterval(() => {\r\n      this.loadTableData();\r\n    }, 50000);\r\n  }\r\n\r\n  // =============\r\n  render() {\r\n    const data = this.state.fetchedData;\r\n\r\n    return(\r\n      <React.Fragment>\r\n        {/* <h1>Data Log</h1>\r\n        <button\r\n        id=\"getBtn_d\"\r\n        hidden={false}\r\n        onClick={e => {\r\n          this.loadTableData();\r\n          document.getElementById(\"tableDiv_d\").hidden = false;\r\n          document.getElementById(\"closeBtn_d\").hidden = false;\r\n          document.getElementById(\"getBtn_d\").hidden = true;\r\n        }}\r\n        >\r\n          Show Data Log Table\r\n        </button>\r\n        <button\r\n          id=\"closeBtn_d\"\r\n          hidden={true}\r\n          onClick={e => {\r\n            this.loadTableData();\r\n            document.getElementById(\"tableDiv_d\").hidden = true;\r\n            document.getElementById(\"closeBtn_d\").hidden = true;\r\n            document.getElementById(\"getBtn_d\").hidden = false;\r\n          }}\r\n          >\r\n            Close Table\r\n          </button>\r\n          <br />\r\n          <br />\r\n          <div id=\"tableDiv_d\" \r\n          hidden={true}\r\n          > */}\r\n          <ReactTable\r\n            data={data}\r\n            columns={[\r\n              {\r\n                Header: \"Student ID\",\r\n                accessor: \"StudentID\",\r\n                filterable: true,\r\n                PivotValue: ({ value }) => (\r\n                  <span style={{ color: \"darkgreen\" }}>{value}</span>\r\n                ),\r\n                minWidth: 100\r\n              },\r\n              {\r\n                Header: \"Vehicle ID\",\r\n                accessor: \"VehicleID\",\r\n                filterable: true,\r\n                minWidth: 100,\r\n                PivotValue: ({ value }) => (\r\n                <span style={{ color: \"darkred\" }}>{value}</span>\r\n                )\r\n              },\r\n              {\r\n                Header: \"Location\",\r\n                accessor: \"Location\",\r\n                filterable: false,\r\n                minWidth: 100\r\n              },\r\n              {\r\n                Header: \"Date Log\",\r\n                accessor: \"DateLog\",\r\n                filterable: false,\r\n                minWidth: 100\r\n              },\r\n              {\r\n                Header: \"Tag Status\",\r\n                accessor: \"TagStatus\",\r\n                filterable: false,\r\n                minWidth: 100\r\n              },\r\n            ]}\r\n            filterable\r\n            //pivotBy={[\"StudentID\", \"VehicleID\", \"Location\", \"DateLog\", \"TagStatus\"]}\r\n            loadingText=\"Loading.....\"\r\n            defaultPageSize={5}\r\n            className=\"-striped -highlight\"\r\n            />\r\n          {/* </div> */}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport backendurl from \"../config.js\";\r\n\r\n\r\nexport default class UpdateStudent extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      student_id: \"\",\r\n      Firstname: \"\",\r\n      Lastname: \"\",\r\n      VehicleID: \"\"\r\n    };\r\n\r\n    this.handleChangeFirstname = this.handleChangeFirstname.bind(this);\r\n    this.handleChangeLastname = this.handleChangeLastname.bind(this);\r\n    this.handleChangeVehicleID = this.handleChangeVehicleID.bind(this);\r\n    this.togglePop = this.togglePopup.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let vID_Holder = \"\";\r\n    if (this.props.vID !== null) {\r\n      vID_Holder = this.props.vID;\r\n    } else {\r\n      vID_Holder = \"\";\r\n    }\r\n\r\n    this.setState({\r\n      student_id: this.props.sID,\r\n      Firstname: this.props.fN,\r\n      Lastname: this.props.lN,\r\n      VehicleID: vID_Holder\r\n    });\r\n  }\r\n\r\n  togglePopup() {\r\n    this.setState({\r\n      showPopup: !this.state.showPopup\r\n    });\r\n  }\r\n\r\n  handleChangeFirstname(event) {\r\n    this.setState({\r\n      Firstname: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeLastname(event) {\r\n    this.setState({\r\n      Lastname: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeVehicleID(event) {\r\n    this.setState({\r\n      VehicleID: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"popup\">\r\n        <div className=\"popup_inner_S\">\r\n          <div>\r\n            <label>First Name :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"FName\"\r\n              value={this.state.Firstname}\r\n              onChange={this.handleChangeFirstname}\r\n            />\r\n            <br />\r\n            <label>Last Name :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"LName\"\r\n              value={this.state.Lastname}\r\n              onChange={this.handleChangeLastname}\r\n            />\r\n            <br />\r\n            <label>Vehicle ID :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"Vid\"\r\n              value={this.state.VehicleID}\r\n              onChange={this.handleChangeVehicleID}\r\n            />\r\n            <br />\r\n            <br />\r\n            <button\r\n              id=\"submitBTN\"\r\n              onClick={e => {\r\n                let v_holder = null;\r\n                if (this.state.VehicleID !== \"\") {\r\n                  v_holder = this.state.VehicleID;\r\n                }\r\n\r\n                fetch(backendurl.backend + \"/updatestudent/\", {\r\n                  method: \"PUT\",\r\n                  headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                  },\r\n                  body: JSON.stringify({\r\n                    StudentID: this.state.student_id,\r\n                    FirstName: this.state.Firstname,\r\n                    LastName: this.state.Lastname,\r\n                    VehicleID: v_holder\r\n                  })\r\n                })\r\n                  .then(res => res.json())\r\n                  .then(result => {\r\n                    if (result.sqlError !== null) {\r\n                      if (result.sqlError.errno === 1062) {\r\n                        alert(\r\n                          \"That Vehicle ID  is USED by another... try another Vehicle ID.\"\r\n                        );\r\n                      } else if (result.sqlError.errno === 1452) {\r\n                        alert(\r\n                          \"That Vehicle ID does NOT EXIST try another Vehicle ID.\"\r\n                        );\r\n                      }\r\n                    } else {\r\n                      alert(result.message);\r\n                      this.props.reloadTable();\r\n                    }\r\n                  });\r\n                this.props.closePopup();\r\n              }}\r\n            >\r\n              Submit\r\n            </button>\r\n            <button id=\"closeBTN\" onClick={this.props.closePopup}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\n\r\n//Icon\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n\r\nimport UpdateStudent from \"./UpdateStudents\";\r\n//import CreateStudent from \"./creatstudentv2.jsx\";\r\nimport backendurl from \"../config.js\";\r\n\r\n\r\nexport default class GetAllStudents extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      student_id: \"\",\r\n      Firstname: \"\",\r\n      Lastname: \"\",\r\n      VehicleID: \"\",\r\n      fetchedData: [{}],\r\n      showPopup: false\r\n    };\r\n    this.togglePop = this.togglePopup.bind(this);\r\n    this.reloadTable = this.reloadTable.bind(this);\r\n  }\r\n\r\n  togglePopup() {\r\n    this.setState({\r\n      showPopup: !this.state.showPopup\r\n    });\r\n  }\r\n\r\n  reloadTable() {\r\n    this.setState({\r\n      fetchedData: [{}]\r\n    });\r\n    this.loadTableData();\r\n  }\r\n\r\n  loadTableData() {\r\n    fetch(backendurl.backend + \"/students\", {\r\n      method: \"GET\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        this.setState({\r\n          fetchedData: result\r\n        });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadTableData();\r\n    this.interval = setInterval(() => {\r\n      this.loadTableData();\r\n    }, 50000);\r\n  }\r\n\r\n  // ==========================================================================================================================================\r\n  render() {\r\n    const data = this.state.fetchedData;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {/* <h1> Students</h1>\r\n        <button\r\n          id=\"getBtn_s\"\r\n          hidden={false}\r\n          onClick={e => {\r\n            this.loadTableData();\r\n            document.getElementById(\"tableDiv_s\").hidden = false;\r\n            document.getElementById(\"closeBtn_s\").hidden = false;\r\n            document.getElementById(\"getBtn_s\").hidden = true;\r\n          }}\r\n        >\r\n          Show Student Table\r\n        </button>\r\n        <button\r\n          id=\"closeBtn_s\"\r\n          hidden={true}\r\n          onClick={e => {\r\n            document.getElementById(\"tableDiv_s\").hidden = true;\r\n            document.getElementById(\"closeBtn_s\").hidden = true;\r\n            document.getElementById(\"getBtn_s\").hidden = false;\r\n          }}\r\n        >\r\n          Close Table\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <div id=\"tableDiv_s\" hidden={true}> */}\r\n          <ReactTable\r\n            data={data}\r\n            columns={[\r\n              {\r\n                //Create Filter by Selecting Tru\r\n                Header: \"Student ID\",\r\n                accessor: \"StudentID\",\r\n                filterable: true\r\n              },\r\n              {\r\n                Header: \"First Name\",\r\n                accessor: \"FirstName\",\r\n                filterable: false\r\n              },\r\n              {\r\n                Header: \"Last Name\",\r\n                accessor: \"LastName\",\r\n                filterable: false\r\n              },\r\n              {\r\n                Header: \"Vehicle ID\",\r\n                accessor: \"VehicleID\",\r\n                filterable: true\r\n              },\r\n              {\r\n                Header: <div>  Actions <span /> <PostAddIcon \r\n                fontSize=\"large\" \r\n                color=\"inherit\" \r\n                onClick={e => {\r\n                  alert(\"hello\");\r\n                }} /></div>,\r\n                filterable: false,\r\n                Cell: props => {\r\n                  return (\r\n                      <div>\r\n                      <UpdateIcon \r\n                      fontSize=\"large\" \r\n                      color= \"inherit\"\r\n                        onClick={e => {\r\n                          this.setState({\r\n                            student_id: props.original.StudentID,\r\n                            Firstname: props.original.FirstName,\r\n                            Lastname: props.original.LastName,\r\n                            VehicleID: props.original.VehicleID\r\n                          });\r\n                          this.togglePop();\r\n                        }}\r\n                      />\r\n                      {this.state.showPopup ? (\r\n                        <UpdateStudent\r\n                          sID={this.state.student_id}\r\n                          fN={this.state.Firstname}\r\n                          lN={this.state.Lastname}\r\n                          vID={this.state.VehicleID}\r\n                          closePopup={this.togglePopup.bind(this)}\r\n                          reloadTable={this.reloadTable.bind(this)}\r\n                        />\r\n                      ) : null}\r\n                      <span> </span>\r\n                      <DeleteIcon\r\n                      fontSize=\"large\" \r\n                      color=\"error\" \r\n                        onClick={e => {\r\n                          fetch(\r\n                            backendurl.backend + \"/delete/studentdata/\" +\r\n                              props.original.StudentID,\r\n                            {\r\n                              method: \"DELETE\"\r\n                            }\r\n                          )\r\n                            .then(res => res.json())\r\n                            .then(result => {\r\n                              this.reloadTable();\r\n                              alert(result.message);\r\n                            });\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  );\r\n                }\r\n              }\r\n            ]}\r\n            filterable\r\n            loadingText=\"Loading.....\"\r\n            defaultPageSize={5}\r\n            className=\"-striped -highlight\"\r\n          />\r\n        {/* </div> */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport backendurl from \"../config.js\";\r\n\r\n\r\nexport default class CreateStudentComp extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      student_id: \"\",\r\n      Firstname: \"\",\r\n      Lastname: \"\",\r\n      postStudent_info: \"\"\r\n    };\r\n\r\n    this.handleChangeStudentid = this.handleChangeStudentid.bind(this);\r\n    this.handleChangeFirstname = this.handleChangeFirstname.bind(this);\r\n    this.handleChangeLastname = this.handleChangeLastname.bind(this);\r\n  }\r\n\r\n  handleChangeStudentid(event) {\r\n    this.setState({\r\n      student_id: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeFirstname(event) {\r\n    this.setState({\r\n      Firstname: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeLastname(event) {\r\n    this.setState({\r\n      Lastname: event.target.value\r\n    });\r\n  }\r\n\r\n  convertJSON2Table(jData) {\r\n    var col = [];\r\n    for (let x = 0; x < jData.length; x++) {\r\n      for (let key in jData[x]) {\r\n        if (col.indexOf(key) === -1) {\r\n          col.push(key);\r\n        }\r\n      }\r\n    }\r\n\r\n    var table = document.createElement(\"table\");\r\n\r\n    var tr = table.insertRow(-1);\r\n    for (let x = 0; x < col.length; x++) {\r\n      var th = document.createElement(\"th\");\r\n      th.innerHTML = col[x];\r\n      tr.appendChild(th);\r\n    }\r\n\r\n    for (let x = 0; x < jData.length; x++) {\r\n      tr = table.insertRow(-1);\r\n\r\n      for (let y = 0; y < col.length; y++) {\r\n        var tabCell = tr.insertCell(-1);\r\n        tabCell.innerHTML = jData[x][col[y]];\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      postStudent_info: table.outerHTML,\r\n      userinput: \"\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Create New Student</h1>\r\n        Student ID\r\n        <input\r\n          type=\"text\"\r\n          name=\"SID\"\r\n          value={this.state.student_id}\r\n          onChange={this.handleChangeStudentid}\r\n        />\r\n        <br></br>\r\n        First Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"First\"\r\n          value={this.state.Firstname}\r\n          onChange={this.handleChangeFirstname}\r\n        />\r\n        <br></br>\r\n        Last Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"Last\"\r\n          value={this.state.Lastname}\r\n          onChange={this.handleChangeLastname}\r\n        />\r\n        <br></br>\r\n        <button\r\n          //Check if user input is not blank\r\n          onClick={e => {\r\n            fetch(backendurl.backend + \"/createstudent/\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n              },\r\n              body: JSON.stringify({\r\n                StudentID: this.state.student_id,\r\n                FirstName: this.state.Firstname,\r\n                LastName: this.state.Lastname\r\n              })\r\n            })\r\n              .then(res => res.json())\r\n              .then(result => {\r\n                alert(result.message);\r\n              });\r\n          }}\r\n        >\r\n          Post Student Info\r\n        </button>\r\n        <br></br>\r\n        <br></br>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport backendurl from \"../config.js\";\r\n\r\n\r\nexport default class UpdateVehicle extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      VehicleID: \"\",\r\n      StudentID: \"\",\r\n      Make: \"\",\r\n      Model: \"\",\r\n      Year: \"\",\r\n      LicencePlate: \"\",\r\n      TagNum: \"\",\r\n      TagStatus: \"\"\r\n    };\r\n\r\n    this.handleChangeVehicleID = this.handleChangeVehicleID.bind(this);\r\n    this.handleChangeStudentID = this.handleChangeStudentID.bind(this);\r\n    this.handleChangeMake = this.handleChangeMake.bind(this);\r\n    this.handleChangeModel = this.handleChangeModel.bind(this);\r\n    this.handleChangeYear = this.handleChangeYear.bind(this);\r\n    this.handleChangeLicencePlate = this.handleChangeLicencePlate.bind(this);\r\n    this.handleChangeTagNum = this.handleChangeTagNum.bind(this);\r\n    this.handleChangeTagStatus = this.handleChangeTagStatus.bind(this);\r\n    this.togglePop = this.togglePopup.bind(this);\r\n  }\r\n\r\n  //=========Unclear\r\n  componentDidMount() {\r\n    this.setState({\r\n      VehicleID: this.props.vID,\r\n      StudentID: this.props.sID,\r\n      Make: this.props.mK,\r\n      Model: this.props.mO,\r\n      Year: this.props.yR,\r\n      LicencePlate: this.props.lP,\r\n      TagNum: this.props.tN,\r\n      TagStatus: this.props.tS\r\n    });\r\n  }\r\n\r\n  togglePopup() {\r\n    this.setState({\r\n      showPopup: !this.state.showPopup\r\n    });\r\n  }\r\n\r\n  handleChangeVehicleID(event) {\r\n    this.setState({\r\n      VehicleID: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeStudentID(event) {\r\n    this.setState({\r\n      StudentID: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeMake(event) {\r\n    this.setState({\r\n      Make: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeModel(event) {\r\n    this.setState({\r\n      Model: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeYear(event) {\r\n    this.setState({\r\n      Year: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeLicencePlate(event) {\r\n    this.setState({\r\n      LicencePlate: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeTagNum(event) {\r\n    this.setState({\r\n      TagNum: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeTagStatus(event) {\r\n    this.setState({\r\n      TagStatus: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"popup\">\r\n        <div className=\"popup_inner_V\">\r\n          <div>\r\n            <label>Vehicle ID :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"Vid\"\r\n              value={this.state.VehicleID}\r\n              onChange={this.handleChangeVehicleID}\r\n            />\r\n            <br />\r\n            <label>Student ID :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"Sid\"\r\n              value={this.state.StudentID}\r\n              onChange={this.handleChangeStudentID}\r\n            />\r\n            <br />\r\n            <label>Make :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"Mk\"\r\n              value={this.state.Make}\r\n              onChange={this.handleChangeMake}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Model :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"Mo\"\r\n              value={this.state.Model}\r\n              onChange={this.handleChangeModel}\r\n            />\r\n            <br />\r\n            <label>Year :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"Yr\"\r\n              value={this.state.Year}\r\n              onChange={this.handleChangeYear}\r\n            />\r\n            <br />\r\n            <label>Licence Plate :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"Lp\"\r\n              value={this.state.LicencePlate}\r\n              onChange={this.handleChangeLicencePlate}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Tag Number :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"Tn\"\r\n              value={this.state.TagNum}\r\n              onChange={this.handleChangeTagNum}\r\n            />\r\n            <br />\r\n            <label>Tag Status :</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"Ts\"\r\n              value={this.state.TagStatus}\r\n              onChange={this.handleChangeTagStatus}\r\n            />\r\n            <br />\r\n            <br />\r\n            <button\r\n              id=\"submitBTN\"\r\n              onClick={e => {\r\n                fetch(backendurl.backend + \"/updatevehicle\", {\r\n                  method: \"PUT\",\r\n                  headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                  },\r\n                  body: JSON.stringify({\r\n                    VehicleID: this.state.VehicleID,\r\n                    StudentID: this.state.StudentID,\r\n                    Make: this.state.Make,\r\n                    Model: this.state.Model,\r\n                    Year: this.state.Year,\r\n                    LicencePlate: this.state.LicencePlate,\r\n                    TagNum: this.state.TagNum,\r\n                    TagStatus: this.state.TagStatus\r\n                  })\r\n                })\r\n                  .then(res => res.json())\r\n                  .then(result => {\r\n                    alert(result.message);\r\n                    this.props.reloadTable();\r\n                  });\r\n                this.props.closePopup();\r\n              }}\r\n            >\r\n              Submit\r\n            </button>\r\n            <button id=\"closeBTN\" onClick={this.props.closePopup}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\n//Icon\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n\r\nimport UpdateVehicle from \"./UpdateVehicle\";\r\nimport backendurl from \"../config.js\";\r\n\r\n\r\nexport default class GetAllVehicles extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      Vehicle_id: \"\",\r\n      student_id: \"\",\r\n      Make: \"\",\r\n      Model: \"\",\r\n      Year: \"\",\r\n      LicencePlate: \"\",\r\n      TagNum: \"\",\r\n      TagStatus: \"\",\r\n      fetchedData: [{}],\r\n      showPopup: false\r\n    };\r\n    this.togglePop = this.togglePopup.bind(this);\r\n    this.reloadTable = this.reloadTable.bind(this);\r\n  }\r\n\r\n  togglePopup() {\r\n    this.setState({\r\n      showPopup: !this.state.showPopup\r\n    });\r\n  }\r\n\r\n  reloadTable() {\r\n    this.setState({\r\n      fetchedData: [{}]\r\n    });\r\n    this.loadTableData();\r\n  }\r\n\r\n  loadTableData() {\r\n    fetch(backendurl.backend + \"/Vehicles\", {\r\n      method: \"GET\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        this.setState({\r\n          fetchedData: result\r\n        });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadTableData();\r\n    this.interval = setInterval(() => {\r\n      this.loadTableData();\r\n    }, 50000);\r\n  }\r\n\r\n  // =============\r\n  render() {\r\n    const data = this.state.fetchedData;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {/* <h1> Vehicles</h1>\r\n        <button\r\n          id=\"getBtn_v\"\r\n          hidden={false}\r\n          onClick={e => {\r\n            this.loadTableData();\r\n            document.getElementById(\"tableDiv_v\").hidden = false;\r\n            document.getElementById(\"closeBtn_v\").hidden = false;\r\n            document.getElementById(\"getBtn_v\").hidden = true;\r\n          }}\r\n        >\r\n          Show Vehicle Table\r\n        </button>\r\n        <button\r\n          id=\"closeBtn_v\"\r\n          hidden={true}\r\n          onClick={e => {\r\n            this.loadTableData();\r\n            document.getElementById(\"tableDiv_v\").hidden = true;\r\n            document.getElementById(\"closeBtn_v\").hidden = true;\r\n            document.getElementById(\"getBtn_v\").hidden = false;\r\n          }}\r\n        >\r\n          Close Table\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <div id=\"tableDiv_v\" hidden={true}> */}\r\n          <ReactTable\r\n            data={data}\r\n            columns={[\r\n              {\r\n                Header: \"Vehicle ID\",\r\n                accessor: \"VehicleID\",\r\n                filterable: true,\r\n                minWidth: 100\r\n              },\r\n              {\r\n                Header: \"Student ID\",\r\n                accessor: \"StudentID\",\r\n                filterable: true,\r\n                minWidth: 100\r\n              },\r\n              {\r\n                Header: \"Make\",\r\n                accessor: \"Make\",\r\n                filterable: false,\r\n                minWidth: 100\r\n              },\r\n              {\r\n                Header: \"Model\",\r\n                accessor: \"Model\",\r\n                filterable: false,\r\n                minWidth: 100\r\n              },\r\n              {\r\n                Header: \"Year\",\r\n                accessor: \"Year\",\r\n                filterable: false,\r\n                minWidth: 100\r\n              },\r\n              {\r\n                Header: \"Licence Plate\",\r\n                accessor: \"LicencePlate\",\r\n                filterable: false\r\n              },\r\n              {\r\n                Header: \"Tag Number\",\r\n                accessor: \"TagNum\",\r\n                filterable: false,\r\n                minWidth: 250\r\n              },\r\n              {\r\n                Header: \"Tag Status\",\r\n                accessor: \"TagStatus\",\r\n                filterable: false,\r\n                maxWidth: 100\r\n              },\r\n              {\r\n                Header: <div>  Actions <span /> <PostAddIcon \r\n                fontSize=\"large\" \r\n                color=\"inherit\" \r\n                onClick={e => {\r\n                  alert(\"hello\");\r\n                }} /></div>,\r\n                filterable: false,\r\n                Cell: props => {\r\n                  return (\r\n                    <div>\r\n                    <UpdateIcon \r\n                    fontSize=\"large\" \r\n                    color= \"inherit\"\r\n                        onClick={e => {\r\n                          this.setState({\r\n                            Vehicle_id: props.original.VehicleID,\r\n                            student_id: props.original.StudentID,\r\n                            Make: props.original.Make,\r\n                            Model: props.original.Model,\r\n                            Year: props.original.Year,\r\n                            LicencePlate: props.original.LicencePlate,\r\n                            TagNum: props.original.TagNum,\r\n                            TagStatus: props.original.TagStatus\r\n                          });\r\n                          this.togglePop();\r\n                        }}\r\n                      />\r\n                      {this.state.showPopup ? (\r\n                        <UpdateVehicle\r\n                          vID={this.state.Vehicle_id}\r\n                          sID={this.state.student_id}\r\n                          mK={this.state.Make}\r\n                          mO={this.state.Model}\r\n                          yR={this.state.Year}\r\n                          lP={this.state.LicencePlate}\r\n                          tN={this.state.TagNum}\r\n                          tS={this.state.TagStatus}\r\n                          closePopup={this.togglePopup.bind(this)}\r\n                          reloadTable={this.reloadTable.bind(this)}\r\n                        />\r\n                      ) : null}\r\n                      <span> </span>\r\n                      <DeleteIcon\r\n                      fontSize=\"large\" \r\n                      color=\"error\" \r\n                        onClick={e => {\r\n                          fetch(\r\n                            backendurl.backend + \"/delete/vehicledata/\" +\r\n                              props.original.VehicleID,\r\n                            {\r\n                              method: \"DELETE\"\r\n                            }\r\n                          )\r\n                            .then(res => res.json())\r\n                            .then(result => {\r\n                              this.reloadTable();\r\n                              alert(result.message);\r\n                            });\r\n                        }}\r\n                        />\r\n                    </div>\r\n                  );\r\n                }\r\n              }\r\n            ]}\r\n            filterable\r\n            loadingText=\"Loading.....\"\r\n            defaultPageSize={7}\r\n            className=\"-striped -highlight\"\r\n          />\r\n        {/* </div> */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nimport backendurl from \"../config.js\";\r\n\r\n\r\nexport default class CreateVehicleComp extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      student_id: \"\",\r\n      Make: \"\",\r\n      Model: \"\",\r\n      Year: \"\",\r\n      Licence_Plate: \"\",\r\n      Tag_Number: \"\",\r\n      postVehicle_info: \"\"\r\n    };\r\n\r\n    this.handleChangeStudentid = this.handleChangeStudentid.bind(this);\r\n    this.handleChangeMake = this.handleChangeMake.bind(this);\r\n    this.handleChangeModel = this.handleChangeModel.bind(this);\r\n    this.handleChangeYear = this.handleChangeYear.bind(this);\r\n    this.handleChangeLicencePlate = this.handleChangeLicencePlate.bind(this);\r\n    this.handleChangeTagNumber = this.handleChangeTagNumber.bind(this);\r\n  }\r\n\r\n  handleChangeStudentid(event) {\r\n    this.setState({\r\n      student_id: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeMake(event) {\r\n    this.setState({\r\n      Make: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeModel(event) {\r\n    this.setState({\r\n      Model: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeYear(event) {\r\n    this.setState({\r\n      Year: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeLicencePlate(event) {\r\n    this.setState({\r\n      Licence_Plate: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeTagNumber(event) {\r\n    this.setState({\r\n      Tag_Number: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Create New Vehicle</h1>\r\n        Student ID\r\n        <input\r\n          type=\"text\"\r\n          name=\"SID\"\r\n          value={this.state.student_id}\r\n          onChange={this.handleChangeStudentid}\r\n        />\r\n        <br></br>\r\n        Make\r\n        <input\r\n          type=\"text\"\r\n          name=\"mk\"\r\n          value={this.state.Make}\r\n          onChange={this.handleChangeMake}\r\n        />\r\n        <br></br>\r\n        Model\r\n        <input\r\n          type=\"text\"\r\n          name=\"mo\"\r\n          value={this.state.Model}\r\n          onChange={this.handleChangeModel}\r\n        />\r\n        <br></br>\r\n        Year\r\n        <input\r\n          type=\"text\"\r\n          name=\"year\"\r\n          value={this.state.Year}\r\n          onChange={this.handleChangeYear}\r\n        />\r\n        <br></br>\r\n        Licence Plate\r\n        <input\r\n          type=\"text\"\r\n          name=\"LP\"\r\n          value={this.state.Licence_Plate}\r\n          onChange={this.handleChangeLicencePlate}\r\n        />\r\n        <br></br>\r\n        Tag #\r\n        <input\r\n          type=\"text\"\r\n          name=\"Tnum\"\r\n          value={this.state.Tag_Number}\r\n          onChange={this.handleChangeTagNumber}\r\n        />\r\n        <br></br>\r\n        <br></br>\r\n        <button\r\n          onClick={e => {\r\n            fetch(backendurl.backend + \"/createvehicle/\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n              },\r\n              body: JSON.stringify({\r\n                StudentID: this.state.student_id,\r\n                Make: this.state.Make,\r\n                Model: this.state.Model,\r\n                Year: this.state.Year,\r\n                LicencePlate: this.state.Licence_Plate,\r\n                TagNum: this.state.Tag_Number\r\n              })\r\n            })\r\n              .then(res => res.json())\r\n              .then(result => {\r\n                alert(result.message);\r\n              });\r\n          }}\r\n        >\r\n          Post Vehicle Info\r\n        </button>\r\n        <br></br>\r\n        <br></br>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\n//Import Material-Ui API\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles} from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\n// import PhoneIcon from '@material-ui/icons/Phone';\r\n// import FavoriteIcon from '@material-ui/icons/Favorite';\r\n// import PersonPinIcon from '@material-ui/icons/PersonPin';\r\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\n\r\n\r\n//Import Components\r\nimport SpotCounter from \"./Counter.jsx\";\r\nimport GetLog from \"./GetLog.jsx\";\r\nimport GetAllStudents from \"./GetAllStudents.jsx\";\r\nimport CreateStudentComp from \"./CreateStudentComp.jsx\";\r\nimport GetAllVehicles from \"./GetAllVehicles.jsx\";\r\nimport CreateVehicleComp from \"./CreateVehicleComp.jsx\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: '#333',\r\n    color: 'white',\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n        <Box p={3}>{children}</Box>\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n\r\n  function a11yProps(index) {\r\n    return {\r\n      id: `full-width-tab-${index}`,\r\n      'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n  }\r\n\r\n\r\nexport default function IconLabelTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n\r\n\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n\r\n  return (\r\n    <Paper square className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        variant=\"fullWidth\"\r\n        TabIndicatorProps= {{style: {background:'green'}}}\r\n        textColor= \"inherit\"\r\n        aria-label=\"icon label tabs example\"\r\n        centered\r\n      >\r\n        <Tab icon={<StorageIcon />} label=\"Data Log\" {...a11yProps(0)} />\r\n        <Tab icon={<PeopleAltIcon />} label=\"Student\" {...a11yProps(1)} />\r\n        <Tab icon={<DriveEtaIcon />} label=\"Vehicles\" {...a11yProps(2)} />\r\n        <Tab icon={<ScheduleIcon />} label=\"Space Counter\" {...a11yProps(3)} />\r\n      </Tabs>\r\n\r\n\r\n      <TabPanel value={value} index={0}>\r\n        <GetLog> </GetLog>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <GetAllStudents></GetAllStudents>\r\n        <CreateStudentComp></CreateStudentComp>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <GetAllVehicles></GetAllVehicles>\r\n        <CreateVehicleComp></CreateVehicleComp>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <SpotCounter></SpotCounter>\r\n      </TabPanel> \r\n      </Paper>     \r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n// import GetTag from \"./components/GetTagComponent.jsx\";\r\n// import GetAllVehicles from \"./components/GetAllVehicles.jsx\";\r\n// import CreateStudentComp from \"./components/CreateStudentComp.jsx\";\r\n// import CreateVehicleComp from \"./components/CreateVehicleComp.jsx\";\r\n// import SpotCounter from \"./components/Counter.jsx\";\r\nimport MainPage from \"./components/MainPage.jsx\";\r\n//import \"./App.css\";\r\n// import GetLog from \"./components/GetLog.jsx\";\r\n// import GetAllStudents from \"./components/GetAllStudents.jsx\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MainPage />\r\n        {/* <SpotCounter />\r\n        <hr />\r\n        <GetLog></GetLog>\r\n        <hr></hr>\r\n        <GetAllStudents />\r\n        <hr></hr>\r\n        <GetAllVehicles />\r\n        <hr />\r\n        <CreateStudentComp />\r\n        <hr />\r\n        <CreateVehicleComp />\r\n        <hr /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./App.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}